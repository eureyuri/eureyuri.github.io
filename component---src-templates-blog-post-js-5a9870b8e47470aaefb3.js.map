{"version":3,"sources":["webpack:///./src/components/halfCover.js","webpack:///./src/templates/blog-post.js"],"names":["HalfCover","coverImage","blogImage","tab","title","subtitle","dispatch","useDispatch","setTab","setMoreTab","className","fluid","style","position","width","minWidth","minHeight","right","zIndex","objectFit","alt","src","onClick","onKeyDown","BlogPost","render","this","props","data","description","body","heroImage","name","content","url","background","display","flexDirection","justifyContent","marginTop","size","overflow","dangerouslySetInnerHTML","__html","html","Component","pageQuery"],"mappings":"4FAAA,gIAOe,SAASA,EAAU,GAAkD,IAAhDC,EAA+C,EAA/CA,WAAYC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,IAAKC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAC/DC,EAAWC,cAEXC,EAAS,SAACJ,GACVA,IAAJ,IACEE,EAASG,YAAW,EAAD,EAAnBH,KACSF,IAAJ,KACLE,EAASG,YAAW,EAAD,EAAnBH,MAIF,OACI,yBAAKI,UAAU,aACVT,GACG,uBACIU,MADJ,EAEIC,MAAO,CACHC,SADG,WAEHC,MAFG,QAGHC,SAHG,QAIHC,UAJG,OAKHC,MALG,IAMHC,OAAQ,MAEZC,UAVJ,QAWIC,IAAI,+BAGXlB,GACG,yBACImB,IADJ,EAEIT,MAAO,CACLC,SADK,WAELC,MAFK,QAGLC,SAHK,QAILE,MAJK,IAKLC,OAAQ,MAEVE,IAAK,oDAGb,yBAAKV,UAAU,mBACX,wBAAIA,UAAU,0BADlB,GAEML,GACA,2BAHN,GAKKF,GACG,yBAAKO,UAAU,0BACX,4BAAQA,UAAR,iCACIY,QAAS,kBAAMd,EAAN,MACTe,UAAW,kBAAMf,EAAN,OAHnB,KAII,4BAAQE,UAAR,iCACIY,QAAS,kBAAMd,EAAN,MACTe,UAAW,kBAAMf,EAAN,OA1CnC,U,kOCTEgB,E,kGACJC,kBAAU,IAAD,EAMHC,KAAKC,MAAMC,KANR,eAELxB,EAFK,QAGLyB,EAHK,cAILC,EAJK,OAKLC,EALK,YAQP,OACE,6BACE,2BACE,+BADF,GAEE,0BAAMC,KAAN,cAAyBC,QAAUJ,EAAYA,eAEjD,2BACE,uBAAWzB,MAAX,EAAyBF,UAAW6B,OAAeG,MACnD,yBAAKtB,MAAO,CAACuB,WAAD,QAAsBC,QAAtB,OAAuCC,cAAvC,SAA+DC,eAA/D,SAAyFpB,OAAzF,IAAsGL,SAAtG,WAA4H0B,UAAW,YACjJ,uBAAWC,KAAM,SACf,yBAAK5B,MAAO,CAACE,MAAD,OAAgB2B,SAAU,UAAWC,wBAAyB,CAACC,OAAQb,sBAAyBc,a,GAnBnGC,aAiCvB,YAEO,IAAMC,EAAN","file":"component---src-templates-blog-post-js-5a9870b8e47470aaefb3.js","sourcesContent":["import React from 'react'\nimport Img from \"gatsby-image\"\nimport \"./halfCover.css\";\nimport { useDispatch } from \"react-redux\"\nimport { BACKGROUND, INTERESTS } from \"../utils/constants\"\nimport { setMoreTab } from \"../actions\"\n\nexport default function HalfCover({ coverImage, blogImage, tab, title, subtitle }) {\n  const dispatch = useDispatch();\n\n  const setTab = (title) => {\n    if (title === BACKGROUND) {\n      dispatch(setMoreTab(BACKGROUND, ''));\n    } else if (title === INTERESTS) {\n      dispatch(setMoreTab(INTERESTS, ''));\n    }\n  }\n\n    return (\n        <div className=\"halfcover\">\n            {coverImage && (\n                <Img\n                    fluid={coverImage}\n                    style={{\n                        position: \"absolute\",\n                        width: \"100vw\",\n                        minWidth: \"100vw\",\n                        minHeight: \"70vh\",\n                        right: \"0\",\n                        zIndex: \"-1\",\n                    }}\n                    objectFit=\"cover\"\n                    alt=\"A summer festival in Japan\"\n                />\n            )}\n            {blogImage && (\n                <img \n                    src={blogImage}\n                    style={{\n                      position: \"absolute\",\n                      width: \"100vw\",\n                      minWidth: \"100vw\",\n                      right: \"0\",\n                      zIndex: \"-1\",\n                    }}\n                    alt={\"Fireworks seen in Hamamatsu Japan from a cruise\"}\n                />\n            )}\n            <div className=\"halfcover__text\">\n                <h1 className=\"halfcover__text__title\">{title}</h1>\n                { subtitle && (\n                  <p>{subtitle}</p>\n                )}\n                {tab && (\n                    <div className=\"halfcover__text__links\">\n                        <button className=\"halfcover__text__links__button\"\n                            onClick={() => setTab(BACKGROUND)}\n                            onKeyDown={() => setTab(BACKGROUND)}>{ BACKGROUND }</button>\n                        <button className=\"halfcover__text__links__button\"\n                            onClick={() => setTab(INTERESTS)}\n                            onKeyDown={() => setTab(INTERESTS)}>{ INTERESTS }</button>\n                    </div>\n                )}\n            </div>\n        </div>\n    )\n}\n","import React, { Component} from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/layout';\nimport HalfCover from '../components/halfCover';\nimport Container from '../components/container';\nimport './blog-post.css';\nimport {Helmet} from \"react-helmet\";\n\nclass BlogPost extends Component {\n  render() {\n    const {\n      title,\n      description,\n      body,\n      heroImage\n    } = this.props.data.contentfulBlog\n\n    return (\n      <div>\n        <Helmet>\n          <title>{ title }</title>\n          <meta name='description' content={ description.description } />\n        </Helmet>\n        <Layout>\n          <HalfCover title={title} blogImage={heroImage.file.url}/>\n          <div style={{background: \"white\", display: \"flex\", flexDirection:\"column\", justifyContent: \"center\", zIndex: \"2\", position: \"relative\", marginTop: \"-0.5rem\"}}>\n            <Container size={'small'}>\n              <div style={{width: \"100%\", overflow: \"hidden\"}} dangerouslySetInnerHTML={{__html: body.childMarkdownRemark.html}} />\n            </Container>\n\n          </div>\n        </Layout>\n      </div>\n    )\n  }\n}\n\nBlogPost.propTypes = {\n  data: PropTypes.object.isRequired\n}\n\nexport default BlogPost\n\nexport const pageQuery = graphql`\n  query blogPostQuery($slug: String!){\n    contentfulBlog(slug: {eq: $slug}) {\n      title\n      description {\n        description\n      }\n      slug\n      body {\n        childMarkdownRemark {\n          html\n        }\n      }\n      heroImage {\n        file {\n            url\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}