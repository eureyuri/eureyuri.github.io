{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/first-blog-post","result":{"data":{"contentfulBlog":{"title":"First blog post! (and how I made it) v1","description":{"description":"My first attempt to create a blog with Flask, PostgreSQL, and Heroku. Configuring custom domain. "},"slug":"first-blog-post","body":{"childMarkdownRemark":{"html":"<h2>Hello, World!</h2>\n<p>This is my first blog post made with flask, peewee, and postgresql!\n<br>\nShout out to this blog post I referenced to make this: <a href=\"https://charlesleifer.com/blog/how-to-make-a-flask-blog-in-one-hour-or-less/\">https://charlesleifer.com/blog/how-to-make-a-flask-blog-in-one-hour-or-less/</a>\n<br>\nSince the blog post was written to work with sqlite, I had to modify a little to work with postgresql. The reason for this is because sqlite runs in memory and stores data in a file. Since Heroku has an ephemeral file system, the data stored will be periodically cleared (!) and therefore, it would be necessary for us to implement the databse with postgres.\n<br>\nI thought of writing briefly about the switch from sqlite to postgresql since some of you may want to deploy to Heroku and have an actual working blog that doesn't erase your data.\n<br></p>\n<h2>Move to PostgreSQL</h2>\n<ol>\n<li>Add the following import statements\n<code class=\"language-text\">from playhouse.postgres_ext import *</code>\n<code class=\"language-text\">from dotenv import load_dotenv</code></li>\n<li>postgres_ext is for the searching capability, which I decided not to include so I will not really touch on it but you can read the documentation (<a href=\"http://docs.peewee-orm.com/en/latest/peewee/playhouse.html#postgres-ext\">http://docs.peewee-orm.com/en/latest/peewee/playhouse.html#postgres-ext</a>) and make the necessary changes. </li>\n<li>The dotenv package is for loading in the DATABASE<em>URL (as well as all the other credentials including ADMIN</em>PASSWORD and the flask SECRET_KEY). </li>\n<li>Next include the line\n<code class=\"language-text\">DATABASE = os.environ[&#39;DATABASE_URL&#39;]</code></li>\n<li>This will get the DATABASE_URL from Heroku</li>\n<li>That's it for the Python part!</li>\n<li>We'll get our PostgreSQL addon on Heroku. On your command line run\n<code class=\"language-text\">$ heroku addons:create heroku-postgresql:&lt;PLAN_NAME&gt;</code></li>\n<li>For the plan name I chose <code class=\"language-text\">hobby-dev</code></li>\n<li>Create the database on Heroku. On your command line run\n<code class=\"language-text\">$ heroku run python</code>\n<code class=\"language-text\">from your_app import db</code>\n<code class=\"language-text\">python your_app.py</code></li>\n<li>Now we are ready to deploy to Heroku\n<code class=\"language-text\">$ git add .</code>\n<code class=\"language-text\">$ git commit -m &quot;PostgreSQL &quot;</code>\n<code class=\"language-text\">$ git push heroku master</code>\nand <strong>that should be it!</strong></li>\n<li>\n<p>Notes: Accessing database on Heroku from command line\n<code class=\"language-text\">$ heroku pg:psql</code>\nWhen I ran this, I got the message:</p>\n<div class=\"gatsby-highlight\" data-language=\"▸the local psql command could not be located. for help installing psql, see\"><pre class=\"language-▸the local psql command could not be located. for help installing psql, see\"><code class=\"language-▸the local psql command could not be located. for help installing psql, see\">▸    https://devcenter.heroku.com/articles/heroku-postgresql#local-setup```</code></pre></div>\n</li>\n</ol>\n<p>  This happens when the PosgreSQL versions do not match. You can check the version by </p>\n<p>  <code class=\"language-text\">$ heroku pg:info</code> and\n<code class=\"language-text\">$ psql --version</code>\nTo install you can run the following command:\n<code class=\"language-text\">$ brew install postgresql@12</code></p>\n<h2>Custom domain</h2>\n<ul>\n<li>Buy a domain. (I bought it at Name.com for free using Github's student package)\n<code class=\"language-text\">$ heroku domains:add www.eureyuri.codes</code></li>\n<li>If you have not verified your account, you will have to verify on Heroku by putting in your card info</li>\n<li>On Name.com, click on \"Manage DNS\" and add a record with type CNAME, host *, and answer with what heroku gave you when you added your custom domain. It should be in the form somename.herokudns.com</li>\n<li>Then host your website on your custom domain\n<code class=\"language-text\">$ host www.eureyuri.codes</code></li>\n</ul>\n<h3>References</h3>\n<ul>\n<li><a href=\"https://devcenter.heroku.com/articles/sqlite3\">About SQLite on Heroku</a></li>\n<li><a href=\"https://devcenter.heroku.com/articles/heroku-postgresql\">PostgreSQL on Heroku</a></li>\n<li><a href=\"https://dev.to/paultopia/the-easiest-possible-way-to-throw-a-webapp-online-flask--heroku--postgres-185o\">Flask + Heroku + Postgres</a></li>\n<li><a href=\"https://qiita.com/croquette0212/items/9b4dc5377e7d6f292671\">Flask + Heroku + Postgres (in Japanese)</a></li>\n<li><a href=\"https://www.codementor.io/@olawalealadeusi896/restful-api-with-python-flask-framework-and-postgres-db-part-1-kbrwbygx5\">Building a RESTful Blog APIs using python and flask</a></li>\n<li><a href=\"https://installvirtual.com/how-to-install-postgresql-12-on-mac-os-with-brew/\">Installing PostgreSQL 12 with brew</a></li>\n<li><a href=\"https://note.com/haraaa/n/ndf9d96d20ed0\">Installing PostgreSQL 12 with brew (in Japanese)</a></li>\n<li><a href=\"https://about.gitlab.com/handbook/markdown-guide/\">Markdown reference</a></li>\n<li><a href=\"https://devcenter.heroku.com/articles/custom-domains\">Custom domain on Heroku</a></li>\n<li><a href=\"https://stackoverflow.com/questions/32992445/how-to-configure-dns-records-for-name-com-and-a-heroku-app\">Domain from Name.com to Heroku</a></li>\n</ul>\n<h3>Other references</h3>\n<ul>\n<li><a href=\"https://realpython.com/flask-by-example-part-2-postgres-sqlalchemy-and-alembic/\">Setting up Postgres, SQLAlchemy, and Alembic</a></li>\n<li><a href=\"https://swifthorseman.com/2015/06/18/deploying-a-flask-app-with-peewee-to-heroku/\">Deploying a Flask App with Peewee to Heroku</a></li>\n<li><a href=\"https://olivierlacan.com/posts/migrating-homebrew-postgres-to-a-new-version/\">Migrating Homebrew Postgres to a New Version</a></li>\n<li><a href=\"https://flask-bcrypt.readthedocs.io/en/latest/\">Password hashing using flask-bcrypt</a></li>\n</ul>"}},"heroImage":{"file":{"url":"//images.ctfassets.net/t1i3p2wynjf8/6Ac23wtTtpjAAuo3j1Qp65/83ea6560250b7efa5214000add53a942/nordwood-themes-kRNZiGKtz48-unsplash.jpg"}}}},"pageContext":{"slug":"first-blog-post"}},"staticQueryHashes":[]}